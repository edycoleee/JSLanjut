aplikasi todo ini adalah aolikasi
tambah data-simpan ke local memory
fungsi edit, hapus, clear dari memory

HTML
1. section center
    <section class="section-center">
2.form utk terima submit
    <form action="" class="grocery-form">
3. alert jika ada yang salah entry-->
    <p class="alert"></p>
4. judul -->
    <h3>To Do List</h3>
5. bungkus supaya berjajar dalam satu div class -->
    <div class="form-control">
6. input text  -->
    <input type="text" id="grocery" placeholder="masukkan pekerjaan" />
7.tombol submit -->
    <button class="submit-btn" type="submit">Simpan</button>
        </div></form>
8. bungkus list dibawahnya nanti yg isinya item 
   dan 2 tombol hapus dan edit dan 1 tombol clear data-->
        <div class="grocery-container">
        <div class="container1">
9. bungkus artikel satu baris item dan 2 tombol -->
    <article class="grocery-item">
10. tampilan item -->
    <p class="title">item</p>
11. bungkus 2 tombol edit dan hapus -->
    <div class="btn-container">
12.tombol edit -->
    <button class="edit-btn" type="button">
    <i class="fas fa-edit"></i></button>
13. tombol hapus -->
    <button class="delete-btn" type="button">
    <i class="fas fa-trash"></i></button>
    </div></article>
14. button cear semua data -->
    </div>
        <div class="container2">
        <button class="clear-btn" type="button">
        clear items</button></div>
        </section>
        <!--Code end here-->

JAVA SCRIPT
1. Select items
    form (".grocery-form")
    alert (".alert")
    grocery Id("grocery")
    submitBtn (".submit-btn")
    container (".grocery-container")
    list (".grocery-list")
    clearBtn (".clear-btn")

2. init awal
    let editElement;
    let editFlag = false;
    let editID = "";
3. event listener
    // submit form
    form.addEventListener("submit", addItem);
    // clear list
    clearBtn.addEventListener("click", clearItems);
    // display items onload
    window.addEventListener("DOMContentLoaded", setupItems);

4. function addItem =>prevent default =>callback
    4a. if save =>create element => save local
        // append item as child
        addElement()
        // display alert
        displayAlert("item added to the list", "success")
        // show container
        container.classList.add("show-container");
        // set local storage
        addToLocalStorage(id, value);
        // set back to default
        setBackToDefault();
    4b. else if edit => edit local
        //edit element
        editElement.innerHTML = value;
        // display alert
        displayAlert("value changed", "success");
        // edit  local storage
        editLocalStorage(editID, value);
        // set back to default
        setBackToDefault();
    4c. else if empty 
        displayAlert("please enter value", "danger");

4d. function addElement
    createElement("article")
    createAttribute("data-id")
    setAttributeNode(attr)
    classList.add("grocery-item")
    innerHTML = `bla bla`
    // add event listeners to both buttons;
    const deleteBtn = element.querySelector(".delete-btn");
    deleteBtn.addEventListener("click", deleteItem);
    const editBtn = element.querySelector(".edit-btn");
    editBtn.addEventListener("click", editItem);
    appendChild(element)

5. function display alert add alert => timer => remove alert
    displayAlert(text, action)
    alert.textContent = text;
    alert.classList.add(`alert-${action}`)
    setTimeout 1000

6. function clear item
    querySelectorAll(".grocery-item")
    if (items.length > 0) => forEach => removeChild(item)
    classList.remove("show-container")
    displayAlert("empty list", "danger");
    setBackToDefault();
    localStorage.removeItem("list")

7. function delete item
    element = e.currentTarget.parentElement.parentElement
    id = element.dataset.id
    removeChild(element)
    if (list.children.length === 0) =>remove("show-container")
    displayAlert("item removed", "danger")
    setBackToDefault();
    removeFromLocalStorage(id)

8. function edit item
    element = e.currentTarget.parentElement.parentElement
    editElement = e.currentTarget.parentElement.previousElementSibling
    grocery.value = editElement.innerHTML;
    editFlag = true;
    editID = element.dataset.id;
    submitBtn.textContent = "edit"

9. function set back to default
    grocery.value = "";
    editFlag = false;
    editID = "";
    submitBtn.textContent = "submit";

10. function add to local storage
    const grocery = { id, value };
    let items = getLocalStorage();
    items.push(grocery);
    localStorage.setItem("list", JSON.stringify(items));

11. function get local storage
    return localStorage.getItem("list")
    ? JSON.parse(localStorage.getItem("list"))
    : [];

12. function remove from local storage removeFromLocalStorage(id)
    let items = getLocalStorage();
    items = items.filter(function (item) {
    if (item.id !== id) {return item;}});
    localStorage.setItem("list", JSON.stringify(items));

13. function edit local storage editLocalStorage(id, value)
    let items = getLocalStorage();
    items = items.map(function (item) {
    if (item.id === id) { item.value = value; }
    return item; });
    localStorage.setItem("list", JSON.stringify(items));

// SETUP LOCALSTORAGE.REMOVEITEM('LIST'); 
// ****** setup items **********
//setupItems
function setupItems() {
  let items = getLocalStorage();

  if (items.length > 0) {
    items.forEach(function (item) {
      createListItem(item.id, item.value);
    });
    container.classList.add("show-container");
  }
}

==================================================index html
                    <!-- 9. bungkus artikel satu baris item dan 2 tombol -->
                    <article class="grocery-list">
                        <!-- 10. tampilan item -->
                        <p class="title">item</p>
                        <!-- 11. bungkus 2 tombol edit dan hapus -->
                        <div class="btn-container">
                            <!-- 12.tombol edit -->
                            <button class="edit-btn" type="button">
                                <i class="fas fa-edit"></i>
                            </button>
                            <!-- 13. tombol hapus -->
                            <button class="delete-btn" type="button">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    </article>
                    <!-- 14. button cear semua data -->